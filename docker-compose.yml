version: "3.9"
services:
  web:
    build: .
    ports:
      - "8070:8080"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - subscription-network
    env_file:
      - .env
    restart: on-failure
    volumes:
      - .:/app
  web-debug:
    build:
      context: .
      dockerfile: Dockerfile-debug
    cap_add:
      - SYS_PTRACE
    ports:
      - "8080:8080"
      - "40000:40000"
    security_opt:
      - "seccomp:unconfined"
    command: /dlv --headless --listen=:40000 --api-version=2 exec /subscriptions
    env_file:
      - .env
    restart: on-failure
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - subscription-network

  postgres:
    image: postgres:14.1-alpine
    restart: on-failure
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 3s
      timeout: 5s
      retries: 20
    ports:
      - '1234:5432'
    volumes:
      - ./postgres-data:/var/lib/postgresql/data
      - ./database/init.sql:/docker-entrypoint-initdb.d/create_tables.sql
    env_file:
      - .env
    networks:
      - subscription-network
volumes:
  postgres-data:

networks:
  subscription-network:
    driver: bridge
